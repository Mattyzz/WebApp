{"version":3,"sources":["logo.svg","pages/Home.jsx","App.js","reportWebVitals.js","pages/JsonStuff.jsx","pages/Resources.jsx","pages/Minecraft.jsx","index.js"],"names":["Home","className","App","style","borderBottom","paddingBottom","background","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","JsonStuff","userObj","JSON","parse","name","email","plan","Resources","href","Minecraft","data","fetch","json","ReactDOM","render","path","element","document","getElementById"],"mappings":"4MAAe,I,0BCEA,SAASA,IACpB,OACI,iCACE,qBAAKC,UAAU,SAAf,SACE,4DAGF,mBAAGA,UAAU,SAAb,gGACA,mBAAGA,UAAU,SAAb,mGCuBKC,MA3Bf,WACE,OACE,iCACE,qBAAKD,UAAU,UAAf,6CAIA,qBAAKA,UAAU,SAAf,SACE,sBACEE,MAAO,CACLC,aAAc,YACdC,cAAe,OACfC,WAAyB,GAJ7B,UAOE,cAAC,IAAD,CAAMC,GAAG,OAAT,kBAPF,MAOiC,IAC/B,cAAC,IAAD,CAAMA,GAAG,YAAT,uBARF,KAQ0C,IACxC,cAAC,IAAD,CAAMA,GAAG,YAAT,uBATF,MAS2C,IACzC,cAAC,IAAD,CAAMA,GAAG,YAAT,uBAVF,MAU2C,SAI7C,cAAC,IAAD,QChBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJC,SAASQ,IACtB,IAEIC,EAAUC,KAAKC,MAFL,6DAGZ,OACI,+BACE,sBAAKnB,UAAU,SAAf,UACE,0EACA,wEAGA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,UAAf,UACA,iEACA,uCAAUiB,EAAQG,QAClB,wCAAWH,EAAQI,SACnB,uCAAUJ,EAAQK,WAGlB,sBAAKtB,UAAU,UAAf,UACE,oDACA,uCAAUiB,EAAQG,QAClB,wCAAWH,EAAQI,SACnB,uCAAUJ,EAAQK,WAGpB,sBAAKtB,UAAU,UAAf,UACE,sDACA,uCAAUiB,EAAQG,QAClB,wCAAWH,EAAQI,SACnB,uCAAUJ,EAAQK,WAGpB,sEACA,sBAAKtB,UAAU,UAAf,UACE,sCACA,+CACA,iFCxCD,SAASuB,IACpB,OACI,+BACI,qBAAKvB,UAAU,aAAf,SACA,sBAAKA,UAAU,SAAf,UACI,+GAGA,sBAAKA,UAAU,UAAf,UACI,2DACA,mBAAGwB,KAAK,iCAAR,yBAGJ,sBAAKxB,UAAU,UAAf,UACI,8CACA,mBAAGwB,KAAK,8DAAR,uCCTL,SAASC,IACpB,IACIC,EADWC,MAAM,+FACDC,OAGpB,OACI,iCACE,qBAAK5B,UAAU,SAAf,SACE,kEAEF,mBAAGA,UAAU,SAAb,wFACA,mBAAGA,UAAU,SAAb,SAAuB0B,EAAK,GAAGN,UCNzCS,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UAIE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAACjC,EAAD,MACzB,cAAC,IAAD,CAAOgC,KAAK,OAAOC,QAAS,cAACjC,EAAD,MAC5B,cAAC,IAAD,CAAOgC,KAAK,YAAYC,QAAS,cAAChB,EAAD,MACjC,cAAC,IAAD,CAAOe,KAAK,YAAYC,QAAS,cAACT,EAAD,MACjC,cAAC,IAAD,CAAOQ,KAAK,YAAYC,QAAS,cAACP,EAAD,aAIvCQ,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.4a82247e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//Home.Js\r\n\r\nexport default function Home(){\r\n    return (\r\n        <main>\r\n          <div className='center'>\r\n            <h2>Welcome to the homepage!</h2>\r\n          </div>\r\n          \r\n          <p className='center'>You can do this, I believe in you. I'm making this using reactrouter.com tutorials</p>\r\n          <p className='center'>I literally JUST realized that you can apply classNames to default stylings....FML</p>\r\n        </main> \r\n    );\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Outlet, Link } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\n\r\n//Nav bar page\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <div className=\"nav-bar\">\r\n        Welcome to my React Router Page\r\n      </div>\r\n\r\n      <div className=\"center\">\r\n        <nav\r\n          style={{\r\n            borderBottom: \"solid 1px\",\r\n            paddingBottom: \"1rem\",\r\n            background: (242,237,237,1)\r\n          }}\r\n        >\r\n          <Link to=\"Home\">Home</Link> | {\" \"}\r\n          <Link to=\"JsonStuff\">JsonStuff</Link> |{\" \"}\r\n          <Link to=\"Resources\">Resources</Link> | {\" \"}\r\n          <Link to=\"Minecraft\">Minecraft</Link> | {\" \"}\r\n        </nav>\r\n      </div>\r\n\r\n      <Outlet />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//Home.Js\r\n//Here I have all the Json Stuff like JSON.parse, JSON.Stringify(TODO)\r\n//I also will put fetch by fetching a username based of UUID from the minecraft api\r\nexport default function JsonStuff(){\r\n  let userStr = '{\"name\":\"Sammy\",\"email\":\"sammy@example.com\",\"plan\":\"Pro\"}';\r\n\r\n  let userObj = JSON.parse(userStr);\r\n    return (\r\n        <main>\r\n          <div className=\"center\">\r\n            <h2>Content boxes are examples of JSON.parse</h2>\r\n            <p>json being used has name email and plan</p>\r\n\r\n\r\n            <div className=\"column\">\r\n              <div className=\"content\">\r\n              <h2>Here is some parsed information</h2>\r\n              <p>Name: {userObj.name}</p>\r\n              <p>Email: {userObj.email}</p>\r\n              <p>Plan: {userObj.plan}</p>\r\n              </div>\r\n\r\n              <div className=\"content\">\r\n                <h2>Inline Box Testing</h2>\r\n                <p>Name: {userObj.name}</p>\r\n                <p>Email: {userObj.email}</p>\r\n                <p>Plan: {userObj.plan}</p>\r\n              </div>\r\n\r\n              <div className=\"content\">\r\n                <h2>Inline Box Testing 2</h2>\r\n                <p>Name: {userObj.name}</p>\r\n                <p>Email: {userObj.email}</p>\r\n                <p>Plan: {userObj.plan}</p>\r\n              </div>\r\n\r\n              <h2>Check console log for JSON.stringify</h2>\r\n              <div className=\"content\">\r\n                <h2>TODO</h2>\r\n                <p>JSON.stringify</p>\r\n                <p>No I'm not making a TODO-app... again</p>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </main> \r\n    );\r\n}","export default function Resources(){\r\n    return (\r\n        <main>\r\n            <div className=\"background\">\r\n            <div className=\"center\">\r\n                <h2>Welcome to the page where I list my Resources used to help make this website!</h2>\r\n\r\n\r\n                <div className=\"content\">\r\n                    <h2>Where the Boxes come from</h2>\r\n                    <a href=\"https://enjoycss.com/start#box\">EnjoyCSS</a>\r\n                </div>\r\n\r\n                <div className=\"content\">\r\n                    <h2>React Router</h2>                   \r\n                    <a href=\"https://reactrouter.com/docs/en/v6/getting-started/tutorial\">ReactRouter.com</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </main> \r\n    );\r\n}","/*\r\nThis is where I use fetch to pulled data from the Mojang API based on a UUID.\r\nThe UUID will be used to obtain the user name and character head icon.\r\nThis will then be displayed to the webpage.\r\n*/\r\n\r\nexport default function Minecraft(){\r\n    let response = fetch('https://sessionserver.mojang.com/session/minecraft/profile/0f3a1e5285a0418aa8d1234efdf7e3e3');\r\n    let data = response.json();\r\n\r\n    \r\n    return (\r\n        <main>\r\n          <div className='center'>\r\n            <h2>Welcome to the Minecraft Page!</h2>\r\n          </div>\r\n          <p className='center'>I will be fetching data from the Mojang API and displaying it on this page</p>\r\n          <p className='center'>{data[0].name}</p>\r\n\r\n        </main> \r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\r\nimport Home from \"./pages/Home\";\r\nimport JsonStuff from \"./pages/JsonStuff\";\r\nimport Resources from \"./pages/Resources\";\r\nimport Minecraft from \"./pages/Minecraft\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Routes>\r\n      {/**\r\n       * Home is nested in the main page. And is cosidered a child of /\r\n       */}\r\n      <Route path=\"/\" element={<App />} >\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"Home\" element={<Home />} />\r\n        <Route path=\"JsonStuff\" element={<JsonStuff />} />\r\n        <Route path=\"Resources\" element={<Resources />} />\r\n        <Route path=\"Minecraft\" element={<Minecraft />} />\r\n      </Route>\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}